<?xml version="1.0" encoding="utf-8"?>

<APIVSXML>
<!--

  This file contains a demo of FPUI functionality for the API WG

-->

<Define var="$returnCode" type="int" /> <!-- Return code from function calls -->
<Define var="$errno" type="int" />	  <!-- Errno values -->
<Define var="$fpui_handle" type="fpui_handle" /> <!-- FPUI Interface handle -->
<Define var="$output_string" type="char []" size="%256" />
<Define var="$row" type="int" />
<Define var="$column" type="int" />
<Define var="$ssize" type="ssize_t" />
<Define var="$ver_string" type="char []" />
<Define var="$boolean" type="boolean" />
<Define var="$buf" type="unsigned char []" size="%8" />
<Define var="$char" type="char" />
<Define var="$key" type="int" />
<Define var="$str" type="char []" size="%25" />
<Define var="$size" type="int" />
<Define var="$flags" type="int" />
<Define var="$time" type="int" />
<Define var="$eseq" type="char []" />
<Define var="$arg" type="unsigned int" />
<Define var="$returnFlag" type="int" />


<!-- Set up subroutine to set FPUI variables -->
<SetUp name="FPUI_Set_Variables">

  <!-- Set variables to 0 -->
  <Set var="$returnCode" value="%0"/>
  <Set var="$errno" value="%0"/>

</SetUp>


<!-- Subroutine for calling fpui_open() function and process -->
<Subroutine name="fpui_open"
            description="Call fpui_open()"
           >

  <!-- fpui_handle is set as if error, just to make sure -->
  <Set var="$fpui_handle" value="%-1"/>

  <Function funcName="fpui_open"
            description="Open the FPUI interface"
            return="$fpui_handle"
            errno="$errno"
            p1="#O_RDWR"
            p2="@FPUI Sanity" />

  <Format var="$fpui_handle" />
  <Format var="$errno" />

  <!-- Make sure tod_get succeeded -->
  <If expression="$fpui_handle EQ %-1">
    <Then>
      <Print>Function fpui_open() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>


<!-- Subroutine for calling fpui_clear() function and process -->
<Subroutine name="fpui_clear"
            description="Call fpui_clear()"
           >

  <Function funcName="fpui_clear"
            description="Clear the display"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format var="$returnCode" />
  <Format var="$errno" />

  <!-- Make sure fpui_clear succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_clear() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>


<!-- Subroutine for calling fpui_write_at() function and process -->
<Subroutine name="fpui_write_at"
            description="Call fpui_write_at()"
           >

  <Set var="$output_string" value="@FPUI SANITY TEST"/>
  <Set var="$size" value="%25" />
  <Set var="$row" value="%5"/>
  <Set var="$column" value="%5"/>

  <Function funcName="fpui_write_at"
            description="Write a string"
           
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
            p2="$output_string"
            p3="$size"
            p4="$row"
            p5="$column" />

  <Format />
 
  <!-- Make sure fpui_write_at succeeded -->
  <If expression="$ssize NE $size">
    <Then>
      <Print>Function fpui_write_at() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_close() function and process -->
<Subroutine name="fpui_close"
            description="Call fpui_close()"
           >

  <Function funcName="fpui_close"
            description="Close the FPUI interface"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <!-- Make sure tod_get succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_close() failed</Print>
  	  <Format var="$returnCode" />
      <Format var="$errno" />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Set up subroutine to open FPUI for test cases -->
<SetUp name="fpui_open">

  <!-- Open the FPUI interface -->
  <Call ref="fpui_open"
  		description="fpui_open: Open FPUI interface"
		setUp="FPUI_Set_Variables" />

</SetUp>

<!-- Set up subroutine to close FPUI for test cases -->
<TearDown name="fpui_close">

  <!-- Close the FPUI interface -->
  <Call ref="fpui_close"
  		setUp="FPUI_Set_Variables"
		description="fpui_close: Close FPUI Interface"
		/>

</TearDown>

<!-- Subroutine for calling fpui_apiver() function and process -->
<Subroutine name="fpui_apiver"
            description="Call fpui_apiver()"
           >

  <Function funcName="fpui_apiver"
           
            return="$ver_string"
            errno="$errno"
            p1="$fpui_handle"
			p2="%0" />

  <Format var="$ver_string" />
  <Format var="$errno" />
  
  <Define var="$compare_string" type="char []" />
  <Set var="$compare_string" value="@TEST APIVER STRING" />

  <!-- Make sure fpui_apiver() succeeded -->
  <If expression="$ver_string NE $compare_string" >
    <Then>
      <Print>Function fpui_apiver() failed</Print>
      <Abort status="FAIL" />
    </Then>
	<Else>
	  <Print>Function fpui_apiver() succeeded</Print>
	</Else>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_clear_tab() function and process -->
<Subroutine name="fpui_clear_tab"
            description="Call fpui_clear_tab()"
           >

  <Function funcName="fpui_clear_tab"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="%0" />

  <Format var="$returnCode" />
  <Format var="$errno" />

  <!-- Make sure fpui_clear_tab() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_clear_tab() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_aux_switch functions and process -->
<Subroutine name="fpui_aux_switch"
            description="Call fpui_aux_switch functions"
           >

  <Function funcName="fpui_open_aux_switch"
           
            return="$returnCode"
            errno="$errno" />

  <Format var="$returnCode" />
  <Format var="$errno" />

  <!-- Make sure fpui_open_aux_switch() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_open_aux_switch() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

  <Function funcName="fpui_read_aux_switch"
           
            return="$boolean"
            errno="$errno" />

  <Format var="$boolean" />
  <Format var="$errno" />

  <!-- Make sure fpui_read_aux_switch() succeeded -->
  <If expression="$boolean EQ %-1">
    <Then>
      <Print>Function fpui_read_aux_switch() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

  <Function funcName="fpui_close_aux_switch"
           
            return="$returnCode"
            errno="$errno" />

  <Format var="$returnCode" />
  <Format var="$errno" />

  <!-- Make sure fpui_close_aux_switch() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_close_aux_switch() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_compose_special_char() function and process -->
<Subroutine name="fpui_compose_special_char"
            description="Call fpui_compose_special_char()"
           >

  <Set var="$buf" value="@abcdefg" />
  <Function funcName="fpui_compose_special_char"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="%0"
			p3="$buf" />

  <Format />

  <!-- Make sure fpui_compose_special_char() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_compose_special_char() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_del_keymap() function and process -->
<Subroutine name="fpui_del_keymap"
            description="Call fpui_del_keymap()"
           >

  <Set var="$char" value="@X" />
  <Function funcName="fpui_del_keymap"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$char" />

  <Format />

  <!-- Make sure fpui_del_keymap() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_del_keymap() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_display_special_char() function and process -->
<Subroutine name="fpui_display_special_char"
            description="Call fpui_display_special_char()"
           >

  <Set var="$char" value="@X" />
  <Function funcName="fpui_display_special_char"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="%0" />

  <Format />

  <!-- Make sure fpui_display_special_char() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
      <Print>Function fpui_display_special_char() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_auto_repeat() function and process -->
<Subroutine name="fpui_get_auto_repeat"
            description="Call fpui_get_auto_repeat()" >

  <Function funcName="fpui_set_auto_repeat"
			return="$returnCode"
			errno="$errno"
			p1="$fpui_handle"
			p2="#TRUE" />

  <Function funcName="fpui_get_auto_repeat"
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_auto_repeat() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	<Print>Function fpui_get_auto_repeat() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_auto_scroll() function and process -->
<Subroutine name="fpui_get_auto_scroll"
            description="Call fpui_get_auto_scroll()"
           >

  <Function funcName="fpui_set_auto_scroll"
			return="$returnCode"
			errno="$errno"
			p1="$fpui_handle"
			p2="#TRUE" />

  <Function funcName="fpui_get_auto_scroll"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_auto_scroll() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_auto_scroll() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_auto_wrap() function and process -->
<Subroutine name="fpui_get_auto_wrap"
            description="Call fpui_get_auto_wrap()"
           >

  <Function funcName="fpui_set_auto_wrap"
			return="$returnCode"
			errno="$errno"
			p1="$fpui_handle"
			p2="#TRUE" />

  <Function funcName="fpui_get_auto_wrap"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_auto_wrap() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	<Print>Function fpui_get_auto_wrap() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_backlight() function and process -->
<Subroutine name="fpui_get_backlight"
            description="Call fpui_get_backlight()"
           >

  <Function funcName="fpui_set_backlight"
			return="$returnCode"
			errno="$errno"
			p1="$fpui_handle"
			p2="#TRUE" />

  <Function funcName="fpui_get_backlight"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_backlight() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_backlight() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_character_blink() function and process -->
<Subroutine name="fpui_get_character_blink"
            description="Call fpui_get_character_blink()">

  <Function funcName="fpui_get_character_blink"
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_character_blink() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_character_blink() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_cursor() function and process -->
<Subroutine name="fpui_get_cursor"
            description="Call fpui_get_cursor()"
           >

  <Function funcName="fpui_get_cursor"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_cursor() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_cursor() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_cursor_blink() function and process -->
<Subroutine name="fpui_get_cursor_blink"
            description="Call fpui_get_cursor_blink()"
           >

  <Function funcName="fpui_get_cursor_blink"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />

  <!-- Make sure fpui_get_cursor_blink() succeeded -->
  <If expression="$boolean NE %-1">
    <Then>
	  <Print>Function fpui_get_cursor_blink() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_cursor_pos() function and process -->
<Subroutine name="fpui_get_cursor_pos"
            description="Call fpui_get_cursor_pos()"
           >

  <Function funcName="fpui_get_cursor_pos"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$row"
			p3="$column" />

  <Format />
 
  <!-- Make sure fpui_get_cursor_pos() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_get_cursor_pos() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_focus() function and process -->
<Subroutine name="fpui_get_focus"
            description="Call fpui_get_focus()"
           >

  <Function funcName="fpui_get_focus"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_focus() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_focus() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_keymap() function and process -->
<Subroutine name="fpui_get_keymap"
            description="Call fpui_get_keymap()"
           >

  <Function funcName="fpui_get_keymap"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$key"
			p3="$str"
			p4="%25" />

  <Format />
 
  <!-- Make sure fpui_get_keymap() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_get_keymap() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_led() function and process -->
<Subroutine name="fpui_get_led"
            description="Call fpui_get_led()"
           >

  <Function funcName="fpui_get_led"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_led() succeeded -->
  <If expression="$boolean NE #TRUE">
    <Then>
	  <Print>Function fpui_get_led() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_reverse_video() function and process -->
<Subroutine name="fpui_get_reverse_video"
            description="Call fpui_get_reverse_video()"
           >

  <Function funcName="fpui_get_reverse_video"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_reverse_video() succeeded -->
  <If expression="$boolean NE #FALSE">
    <Then>
	  <Print>Function fpui_get_reverse_video() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_underline() function and process -->
<Subroutine name="fpui_get_underline"
            description="Call fpui_get_underline()"
           >

  <Function funcName="fpui_get_underline"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_underline() succeeded -->
  <If expression="$boolean NE #FALSE">
    <Then>
	  <Print>Function fpui_get_underline() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_window_attr() function and process -->
<Subroutine name="fpui_get_window_attr"
            description="Call fpui_get_window_attr()"
           >

  <Function funcName="fpui_get_window_attr"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_get_window_attr() succeeded -->
  <If expression="$returnCode NE %90">
    <Then>
	  <Print>Function fpui_get_window_attr() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_get_window_size() function and process -->
<Subroutine name="fpui_get_window_size"
            description="Call fpui_get_window_size()"
           >

  <Function funcName="fpui_get_window_size"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$row"
			p3="$column" />

  <Format />

  <Set var="$returnFlag" value="%0" />

  <If expression="$returnCode NE %0">
  	<Then>
        <Set var="$returnFlag" value="%1" />
		<Print>Bad return code</Print>
	</Then>
  </If>

  <If expression="$row NE %8">
  	<Then>
        <Set var="$returnFlag" value="%1" />
		<Print>Bad row value</Print>
	</Then>
  </If>

  <If expression="$column NE %40">
  	<Then>
        <Set var="$returnFlag" value="%1" />
		<Print>Bad column value</Print>
	</Then>
  </If>
 
  <!-- Make sure fpui_get_window_size() succeeded -->
  <If expression="$returnFlag NE %0">
    <Then>
	  <Print>Function fpui_get_window_size() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_home() function and process -->
<Subroutine name="fpui_home"
            description="Call fpui_home()"
           >

  <Function funcName="fpui_home"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_home() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_home() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_poll() function and process -->
<Subroutine name="fpui_poll"
            description="Call fpui_poll()"
           >

  <Function funcName="fpui_poll"
           
            return="$boolean"
            errno="$errno"
            p1="$fpui_handle"
			p2="$flags" />

  <Format />
 
  <!-- Make sure fpui_poll() succeeded -->
  <If expression="$boolean NE #FALSE">
    <Then>
	  <Print>Function fpui_poll() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_read() function and process -->
<Subroutine name="fpui_read"
            description="Call fpui_read()"
           >

  <Set var="$size" value="%25" />

  <Function funcName="fpui_read"
           
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$str"
			p3="$size" />

  <Format />

  <Set var="$returnFlag" value="%0" />

  <If expression="$ssize NE %10">
    <Then>
	  <Print>Size does not equal 10</Print>
	  <Set var="$returnFlag" value="%1" />
	</Then>
  </If>

  <If expression="$str NE @0123456789">
    <Then>
	  <Print>$str is not 0123456789</Print>
	  <Set var="$returnFlag" value="%1" />
	</Then>
  </If>

  <!-- Make sure fpui_read() succeeded -->
  <If expression="$returnFlag EQ %1">
    <Then>
	  <Print>Function fpui_read() failed</Print>
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_read_char() function and process -->
<Subroutine name="fpui_read_char"
            description="Call fpui_read_char()"
           >

  <Function funcName="fpui_read_char"
           
            return="$char"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_read_char() succeeded -->
  <If expression="$char NE @R">
    <Then>
	  <Print>Function fpui_read_char() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_read_string() function and process -->
<Subroutine name="fpui_read_string"
            description="Call fpui_read_string()"
           >

  <Set var="$size" value="%25" />

  <Function funcName="fpui_read_string"
           
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$str"
			p3="$size" />

  <Format />
 
</Subroutine>

<!-- Subroutine for calling fpui_refresh() function and process -->
<Subroutine name="fpui_refresh" description="Call fpui_refresh()" >

  <Function funcName="fpui_refresh"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_refresh() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_refresh() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_reset_all_attributes() function and process -->
<Subroutine name="fpui_reset_all_attributes"
            description="Call fpui_reset_all_attributes()"
           >

  <Function funcName="fpui_reset_all_attributes"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_reset_all_attributes() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_reset_all_attributes() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_reset_keymap() function and process -->
<Subroutine name="fpui_reset_keymap"
            description="Call fpui_reset_keymap()"
           >

  <Function funcName="fpui_reset_keymap"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="%0" />

  <Format />
 
  <!-- Make sure fpui_reset_keymap() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_reset_keymap() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_auto_repeat() function and process -->
<Subroutine name="fpui_set_auto_repeat"
            description="Call fpui_set_auto_repeat()"
           >

  <Function funcName="fpui_set_auto_repeat"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_auto_repeat() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_auto_repeat() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_auto_scroll() function and process -->
<Subroutine name="fpui_set_auto_scroll"
            description="Call fpui_set_auto_scroll()"
           >

  <Function funcName="fpui_set_auto_scroll"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_auto_scroll() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_auto_scroll() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_auto_wrap() function and process -->
<Subroutine name="fpui_set_auto_wrap"
            description="Call fpui_set_auto_wrap()"
           >

  <Function funcName="fpui_set_auto_wrap"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_auto_wrap() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_auto_wrap() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_backlight() function and process -->
<Subroutine name="fpui_set_backlight"
            description="Call fpui_set_backlight()"
           >

  <Function funcName="fpui_set_backlight"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_backlight() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_backlight() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_backlight_timeout() function and process -->
<Subroutine name="fpui_set_backlight_timeout"
            description="Call fpui_set_backlight_timeout()"
           >

  <Function funcName="fpui_set_backlight_timeout"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$time" />

  <Format />
 
  <!-- Make sure fpui_set_backlight_timeout() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_backlight_timeout() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_character_blink() function and process -->
<Subroutine name="fpui_set_character_blink"
            description="Call fpui_set_character_blink()" >
           

  <Function funcName="fpui_set_character_blink"
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_character_blink() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_character_blink() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_cursor() function and process -->
<Subroutine name="fpui_set_cursor"
            description="Call fpui_set_cursor()"
           >

  <Function funcName="fpui_set_cursor"
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_cursor() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_cursor() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_cursor_blink() function and process -->
<Subroutine name="fpui_set_cursor_blink"
            description="Call fpui_set_cursor_blink()" >

  <Function funcName="fpui_set_cursor_blink"
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_cursor_blink() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_cursor_blink() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_cursor_pos() function and process -->
<Subroutine name="fpui_set_cursor_pos"
            description="Call fpui_set_cursor_pos()"
           >

  <Function funcName="fpui_set_cursor_pos"
           
			return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$row"
			p3="$column" />

  <Format />
 
  <!-- Make sure fpui_set_cursor_pos() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_cursor_pos() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_emergency() function and process -->
<Subroutine name="fpui_set_emergency"
            description="Call fpui_set_emergency()"
           >

  <Function funcName="fpui_set_emergency"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="#TRUE" />

  <Format />
 
  <!-- Make sure fpui_set_emergency() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_emergency() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_keymap() function and process -->
<Subroutine name="fpui_set_keymap"
            description="Call fpui_set_keymap()"
           >

  <Function funcName="fpui_set_keymap"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$char"
			p3="$eseq" />

  <Format />
 
  <!-- Make sure fpui_set_keymap() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_keymap() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_led() function and process -->
<Subroutine name="fpui_set_led"
            description="Call fpui_set_led()"
           >

  <Function funcName="fpui_set_led"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_led() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_led() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_reverse_video() function and process -->
<Subroutine name="fpui_set_reverse_video"
            description="Call fpui_set_reverse_video()">

  <Function funcName="fpui_set_reverse_video"
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_reverse_video() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_reverse_video() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_tab() function and process -->
<Subroutine name="fpui_set_tab"
            description="Call fpui_set_tab()"
           >

  <Function funcName="fpui_set_tab"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle" />

  <Format />
 
  <!-- Make sure fpui_set_tab() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_tab() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_underline() function and process -->
<Subroutine name="fpui_set_underline"
            description="Call fpui_set_underline()"
           >

  <Function funcName="fpui_set_underline"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$boolean" />

  <Format />
 
  <!-- Make sure fpui_set_underline() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_underline() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_set_window_attr() function and process -->
<Subroutine name="fpui_set_window_attr"
            description="Call fpui_set_window_attr()"
           >

  <Function funcName="fpui_set_window_attr"
           
            return="$returnCode"
            errno="$errno"
            p1="$fpui_handle"
			p2="$arg" />

  <Format />
 
  <!-- Make sure fpui_set_window_attr() succeeded -->
  <If expression="$returnCode NE %0">
    <Then>
	  <Print>Function fpui_set_window_attr() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_write() function and process -->
<Subroutine name="fpui_write" description="Call fpui_write()" >

  <Set var="$size" value="%25" />
  
  <Function funcName="fpui_write"
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$str"
			p3="$size" />

  <Format />
 
  <!-- Make sure fpui_write() succeeded -->
  <If expression="$ssize NE $size">
    <Then>
	  <Print>Function fpui_write() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_write_char() function and process -->
<Subroutine name="fpui_write_char" description="Call fpui_write_char()" >

  <Function funcName="fpui_write_char"
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$char" />

  <Format />
 
  <!-- Make sure fpui_write_char() succeeded -->
  <If expression="$ssize NE %1">
    <Then>
	  <Print>Function fpui_write_char() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_write_char_at() function and process -->
<Subroutine name="fpui_write_char_at"
            description="Call fpui_write_char_at()" >

  <Function funcName="fpui_write_char_at"
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$char"
			p3="$row"
			p4="$column" />

  <Format />
 
  <!-- Make sure fpui_write_char_at() succeeded -->
  <If expression="$ssize NE %1">
    <Then>
	  <Print>Function fpui_write_char_at() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_write_string() function and process -->
<Subroutine name="fpui_write_string"
            description="Call fpui_write_string()"
           >

  <Function funcName="fpui_write_string"
           
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="$output_string" />

  <Format />
 
  <!-- Make sure fpui_write_string() succeeded -->
  <If expression="$ssize NE !strlen($output_string)">
    <Then>
	  <Print>Function fpui_write_string() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<!-- Subroutine for calling fpui_write_string_at() function and process -->
<Subroutine name="fpui_write_string_at"
            description="Call fpui_write_string_at()"
           >

  <Function funcName="fpui_write_string_at"
           
            return="$ssize"
            errno="$errno"
            p1="$fpui_handle"
			p2="@abcdefg"
			p3="$row"
			p4="$column" />

  <Format />
 
  <!-- Make sure fpui_write_string_at() succeeded -->
  <If expression="$ssize NE %7">
    <Then>
	  <Print>Function fpui_write_string_at() failed</Print>
	  <Format />
      <Abort status="FAIL" />
    </Then>
  </If>

</Subroutine>

<TestCase name="FPUI_DEMO"
		  description="Demonstrate some basic VSE functionality"
		  setUp="fpui_open" 
		  tearDown="fpui_close" >

  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_dump_file" description="Display at start" />

  <!-- Clear the VD -->
  <Call ref="fpui_clear" setUp="FPUI_Set_Variables" />

  <Dump dump="VD" file="@FPUI_cleared_display" description="Display after clear" />

  <!-- Compare contents of screen, to ensure clear worked -->
  <If expression="!VDCompare(@FPUI_cleared_display) EQ #FALSE">
    <Then>
      <Print>--- fpui_clear() failed --</Print>
      <Dump force="#TRUE" dump="VD" file="@FPUI_VD_not_clear" description="The current contents of the display are:" />
      <Abort status="FAIL" />
    </Then>
    <Else>
       <Print>*** fpui_clear() succeeded ***</Print>
    </Else>
  </If>

  <Call ref="fpui_get_auto_wrap" setUp="FPUI_Set_Variables" />

  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_dump_file" description="Display after setting auto wrap" />

  <Call ref="fpui_get_auto_repeat" setUp="FPUI_Set_Variables" />

  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_dump_file" description="Display after setting auto repeat" />

  <Call ref="fpui_get_auto_scroll" setUp="FPUI_Set_Variables" />

  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_dump_file" description="Display after setting auto scroll" />

  <Call ref="fpui_get_backlight" setUp="FPUI_Set_Variables" />

  <Dump dump="VD" file="@FPUI_end_display" description="Display after setting backlight" />

  <!-- Compare contents of screen, to ensure everything worked -->
  <If expression="!VDCompare(@FPUI_end_display) EQ #FALSE">
    <Then>
      <Print>--- Display does not match at end of run ---</Print>
      <Dump force="#TRUE" dump="VD" file="@FPUI_VD_end_run" description="The current contents of the display are:" />
      <Abort status="FAIL" />
    </Then>
    <Else>
       <Print>*** VD display matches at end of run ***</Print>
    </Else>
  </If>

</TestCase>

<TestSuite name="FPUI_DEMO" description="Test demonstration" >

  <TestCaseRef ref="FPUI_DEMO" />

</TestSuite>

<TestCase name="CursorMovement"
		  description="Demonstrate cursor movement"
		  setUp="fpui_open" 
		  tearDown="fpui_close" >

  <!-- Load up the start up screen -->
  <Load load="VD" file="@FPUI_display.fpm" description="Load of ATC startup screen" />
  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_cursor_write" description="Display after load of FPM screen" />

  <!-- Clear the VD -->
  <Call ref="fpui_clear" setUp="FPUI_Set_Variables" />
  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_cursor_write" description="Display after clear" />

<!--
	 Set the cursor to 4 x 4 and write an output string there
	 Then ensure the cursor is at the next character position
	 AND that the current display matches the expected display
-->

  <Set var="$row" value="%4" />
  <Set var="$column" value="%4" />
  <Call ref="fpui_set_cursor_pos" />

  <Set var="$output_string" value="@FPUI DEMO FOR API WG" />
  <Call ref="fpui_write_string" />
  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_cursor_write" description="The current contents of the display are:" />

<!--
	 Now send some input to the FPM,
	 read the input and write that to the screen
-->

  <FPUIInput file="@FPUI_WG.input" description="some input to place on the screen" />
  <Call ref="fpui_read_string" />
  <Set var="$output_string" value="$str" />
  <Call ref="fpui_write_string" />
  <Dump force="#TRUE" dump="VD" file="@FPUI_VD_cursor_write" description="The current contents of the display are:" />

</TestCase>

<TestSuite name="CursorMovement"
		   description="Show cursor moving" >

  <TestCaseRef ref="CursorMovement" />

</TestSuite>
		
</APIVSXML>

